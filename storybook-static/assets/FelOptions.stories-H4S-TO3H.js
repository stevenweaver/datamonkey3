/* empty css            */import{a as ne,t as se}from"./template-Bf37FghY.js";import{p as re,R as c,a as de,V as o,s as e,T as a,n as t,Q as i,W as v}from"./runtime-D_5eIJdB.js";import{i as pe,e as ue}from"./store-DSaKCGfv.js";import{b as ce,a as ve}from"./input-BUIXpOkk.js";import{b as m}from"./select-BhYEdWed.js";import{p as me}from"./props-Byy7dS6_.js";import"./index-BzKHlfNo.js";var be=se(`<div id="fel-options" class="rounded-lg bg-white p-6 shadow-md"><h3 class="mb-4 text-xl font-semibold">FEL Analysis Options</h3> <div class="mb-4"><label id="geneticcode-content" class="mb-1 block text-gray-700">Genetic Code <a href="/help#genetic-code" target="_blank" class="text-blue-500"><sup>?</sup></a></label> <select name="gencodeid" class="w-full rounded border border-gray-300 p-2"><option>Universal code</option><option>Vertebrate mitochondrial DNA code</option><option>Yeast mitochondrial DNA code</option><option>Mold, Protozoan and Coelenterate mt; Mycloplasma/Spiroplasma</option><option>Invertebrate mitochondrial DNA code</option><option>Ciliate, Dasycladacean and Hexamita Nuclear code</option><option>Echinoderm mitochondrial DNA code</option><option>Euplotid Nuclear code</option><option>Alternative Yeast Nuclear code</option><option>Ascidian mitochondrial DNA code</option><option>Flatworm mitochondrial DNA code</option><option>Blepharisma Nuclear code</option></select></div> <div class="mb-4"><label class="mb-1 block text-gray-700">Synonymous rate variation (recommended)?</label> <select id="ds-variation" class="w-full rounded border border-gray-300 p-2"><option>No</option><option>Yes</option></select></div> <div class="mb-4"><label for="multiple-hits" class="mb-1 block text-gray-700">Multiple Hits</label> <select name="multiple_hits" id="multiple-hits" class="w-full rounded border border-gray-300 p-2"><option>None (Single mutations only)</option><option>Double (Branch-specific rates for double substitutions)</option><option>Double+Triple (Branch-specific rates for double and triple substitutions)</option></select></div> <div class="mb-4"><label for="estimated-rates" class="mb-1 block text-gray-700">Site Multihit</label> <select name="site_multihit" id="site-multihit" class="w-full rounded border border-gray-300 p-2"><option>Estimate (Branch-specific rates for substitutions based on model fit)</option><option>Global (Rates derived from global model fit)</option></select></div> <div class="mb-4"><button class="w-full rounded bg-blue-500 px-4 py-2 font-semibold text-white transition hover:bg-blue-600">Run FEL Analysis</button></div> <div class="mt-6"><h5 class="text-lg font-semibold">Advanced Options</h5> <div class="mt-2 rounded-md border border-gray-300 bg-gray-50 p-4"><div class="mb-4"><p class="text-sm text-gray-600">[Advanced setting, will result in MUCH SLOWER run time] Perform parametric bootstrap
					resampling to derive site-level null LRT distributions up to this many replicates per
					site. Recommended use for small to medium (%lt 30 sequences) datasets.</p> <label class="mb-1 block text-gray-700">Resample?</label> <input type="number" placeholder="50" min="0" max="1000" name="resample" class="w-full rounded border border-gray-300 p-2"></div> <div class="mb-4"><p class="text-sm text-gray-600">Compute profile likelihood confidence intervals for each variable site</p> <label class="inline-flex items-center"><input type="checkbox" id="confidence-interval" name="confidence-interval" class="form-checkbox rounded text-indigo-600 focus:ring-indigo-500"> <span class="ml-2">Yes?</span></label></div></div></div></div>`);function Y(n,R){re(R,!1);let Z=me(R,"runMethod",8),r=i("Universal"),d=i("2"),p=i("None"),u=i("Estimate"),b=i(0),_=i(!1);pe();var B=be(),L=e(o(B),2),S=e(o(L),2);c(()=>{t(r),v(()=>{})});var f=o(S);f.value=(f.__value="Universal")==null?"":"Universal";var h=e(f);h.value=(h.__value="Vertebrate mtDNA")==null?"":"Vertebrate mtDNA";var g=e(h);g.value=(g.__value="Yeast mtDNA")==null?"":"Yeast mtDNA";var N=e(g);N.value=(N.__value="Mold/Protozoan mtDNA")==null?"":"Mold/Protozoan mtDNA";var y=e(N);y.value=(y.__value="Invertebrate mtDNA")==null?"":"Invertebrate mtDNA";var A=e(y);A.value=(A.__value="Ciliate Nuclear")==null?"":"Ciliate Nuclear";var D=e(A);D.value=(D.__value="Echinoderm mtDNA")==null?"":"Echinoderm mtDNA";var x=e(D);x.value=(x.__value="Eupltoid Nuclear")==null?"":"Eupltoid Nuclear";var w=e(x);w.value=(w.__value="Alt. Yeast Nuclear")==null?"":"Alt. Yeast Nuclear";var E=e(w);E.value=(E.__value="Ascidian mtDNA")==null?"":"Ascidian mtDNA";var k=e(E);k.value=(k.__value="Flatworm mtDNA")==null?"":"Flatworm mtDNA";var T=e(k);T.value=(T.__value="Blepharisma Nuclear")==null?"":"Blepharisma Nuclear";var U=e(L,2),V=e(o(U),2);c(()=>{t(d),v(()=>{})});var F=o(V);F.value=(F.__value="2")==null?"":"2";var G=e(F);G.value=(G.__value="1")==null?"":"1";var H=e(U,2),I=e(o(H),2);c(()=>{t(p),v(()=>{})});var M=o(I);M.value=(M.__value="None")==null?"":"None";var C=e(M);C.value=(C.__value="Double")==null?"":"Double";var P=e(C);P.value=(P.__value="Double+Triple")==null?"":"Double+Triple";var z=e(H,2),q=e(o(z),2);c(()=>{t(u),v(()=>{})});var O=o(q);O.value=(O.__value="Estimate")==null?"":"Estimate";var W=e(O);W.value=(W.__value="Global")==null?"":"Global";var Q=e(z,2),$=o(Q),ee=e(Q,2),te=e(o(ee),2),j=o(te),oe=e(o(j),4),le=e(j,2),ae=e(o(le),2),ie=o(ae);m(S,()=>t(r),l=>a(r,l)),m(V,()=>t(d),l=>a(d,l)),m(I,()=>t(p),l=>a(p,l)),m(q,()=>t(u),l=>a(u,l)),ue("click",$,()=>Z()({code:t(r),srv:t(d),"multiple-hits":t(p),resample:t(b),ci:t(_)?"Yes":"No","site-multihit":t(u)})),ce(oe,()=>t(b),l=>a(b,l)),ve(ie,()=>t(_),l=>a(_,l)),ne(n,B),de()}Y.__docgen={version:3,name:"FelOptions.svelte",data:[{name:"runMethod",visibility:"public",keywords:[{name:"required",description:""}],kind:"let",type:{kind:"type",type:"any",text:"any"},static:!1,readonly:!1}],computed:[],methods:[],components:[],description:null,keywords:[],events:[],slots:[],refs:[]};const we={title:"FEL Analysis/FelOptions",component:Y},_e=n=>({Component:Y,props:n}),s=_e.bind({});s.args={runMethod:n=>{console.log("Running FEL Analysis with options:",n)}};var J,K,X;s.parameters={...s.parameters,docs:{...(J=s.parameters)==null?void 0:J.docs,source:{originalSource:`args => ({
  Component: FelOptions,
  props: args
})`,...(X=(K=s.parameters)==null?void 0:K.docs)==null?void 0:X.source}}};const Ee=["Default"];export{s as Default,Ee as __namedExportsOrder,we as default};
