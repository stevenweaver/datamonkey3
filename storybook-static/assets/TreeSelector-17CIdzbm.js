import{a as c,t as _,h as fe,i as K}from"./template-Bf37FghY.js";import{p as Ue,Q as p,O,P as Ve,R as k,a as He,T as s,n as e,s as d,V as l,f as pe,B as be,U as w,W as ge}from"./runtime-D_5eIJdB.js";import{i as M,s as P}from"./if-qkq15gDy.js";import{e as Q,i as X}from"./each-BHgmS7vF.js";import{i as Le,e as j}from"./store-DSaKCGfv.js";import{b as je,a as qe}from"./input-BUIXpOkk.js";import{b as _e}from"./select-BhYEdWed.js";import{b as Fe}from"./this-CWb_DT5z.js";import{p as W}from"./props-Byy7dS6_.js";import{o as ze}from"./index-client-DTALjsIX.js";import{P as We}from"./phylotree-0S6UKtol.js";var Ye=_("<option> </option>"),De=_("<option> </option>"),Je=_('<div class="mb-3 rounded bg-gray-50 p-2 text-sm text-gray-600"><p class="font-medium">Current Custom Tree:</p> <p class="truncate"> </p> <p class="mt-1 font-medium">You can modify this tree below:</p></div>'),Ke=_('<div class="mt-4 rounded border border-gray-200 p-4"><h4 class="mb-2 font-semibold">Custom Tree</h4> <!> <div class="mb-3"><label for="tree-file" class="mb-1 block text-sm">Upload Newick File:</label> <input id="tree-file" type="file" accept=".nwk,.txt,.tree" class="w-full rounded border border-gray-300 p-1 text-sm"></div> <div class="mb-3"><label for="tree-input" class="mb-1 block text-sm"><!></label> <textarea id="tree-input" class="h-24 w-full rounded border border-gray-300 p-2" placeholder="Enter Newick format tree string..."></textarea></div> <button class="rounded bg-blue-500 px-3 py-1 text-white hover:bg-blue-600"><!></button></div>'),Qe=_('<div class="mt-4 rounded border border-gray-200 p-4"><h4 class="mb-2 font-semibold">Maximum Likelihood Tree</h4> <p class="mb-3 text-sm">Generate a Maximum Likelihood tree from your alignment.</p> <button class="rounded bg-green-500 px-3 py-1 text-white hover:bg-green-600">Run ML Alignment</button></div>'),Xe=_("<option> </option>"),Ze=_("<li> </li>"),$e=_('<div class="mt-2 max-h-24 overflow-y-auto rounded border border-gray-200 bg-gray-50 p-2 text-xs"><ul class="list-disc pl-4"></ul></div>'),et=_('<div class="mb-4"><label for="branch-set" class="mb-1 block text-sm text-gray-700">Branch Set</label> <select id="branch-set" class="w-full rounded border border-gray-300 p-2 text-sm"></select> <div class="mt-3 text-sm"><p class="mb-1"> </p> <!></div></div>'),tt=_('<div class="mt-4 rounded border border-gray-200 p-4"><div class="mb-2 text-sm text-gray-600">Current method: <span class="font-medium"> </span></div> <div class="mb-4 flex items-center"><input type="checkbox" id="branch-test-mode" class="mr-2 h-4 w-4"> <label for="branch-test-mode" class="text-gray-700">Branch Testing Mode</label></div> <!> <h4 class="mb-2 font-semibold">Tree Visualization</h4> <div class="tree-view svelte-1boioeg" style="height: 450px; overflow: auto;"><!></div></div>'),rt=_('<div class="tree-selector svelte-1boioeg"><div class="mb-4"><label for="tree-select" class="mb-1 block text-gray-700">Select Tree Method</label> <select id="tree-select" class="w-full rounded border border-gray-300 p-2"><!><!></select></div> <!> <!> <!></div>');function at(he,R){Ue(R,!1);const Y=p(),ie=p(),ye=p(),Z=p(),q=[{id:"nj",name:"Neighbor Joining"},{id:"upgma",name:"UPGMA"},{id:"ml",name:"Maximum Likelihood",needsGeneration:!0},{id:"usertree",name:"User Tree"},{id:"custom",name:"Custom Tree",needsInput:!0}],F=[{id:"foreground",name:"Foreground"},{id:"background",name:"Background"},{id:"test",name:"Test Group"}];let t=W(R,"trees",28,()=>({})),n=W(R,"selectedTree",12,"nj"),S=W(R,"onChange",8),xe=W(R,"initialBranchTestMode",8,!1),h=W(R,"userTree",8,""),u=p(""),z=p(!1),A=p(!1),ne=p(),E=p(xe()),B=p([]),y=p("foreground"),U="",le=p(!0),x=p([]),Te="hyphy-scope";ze(()=>{t().usertree&&!n()&&(n("usertree"),S()("usertree")),n()==="custom"&&(h()?(s(u,h()),t(t().custom=h(),!0)):t().usertree&&!t().custom&&(s(u,t().usertree),t(t().custom=t().usertree,!0)))});function ke(a){n(a.target.value),S()(n()),s(B,[]),U="";const r=q.find(o=>o.id===n());(r==null?void 0:r.id)==="custom"?(s(z,!0),s(A,!1),e(u)||(h()?(s(u,h()),t().custom||t(t().custom=h(),!0)):t().usertree&&(s(u,t().usertree),t().custom||t(t().custom=t().usertree,!0)))):r!=null&&r.needsGeneration&&!t()[n()]?(s(A,!0),s(z,!1)):(s(z,!1),s(A,!1))}function we(){e(u).trim()&&(t(t().custom=e(u).trim(),!0),S()(n()))}function Me(a){const r=a.target.files[0];if(r){const o=new FileReader;o.onload=T=>{s(u,T.target.result),t(t().custom=e(u),!0),S()(n())},o.readAsText(r)}}function Se(){t(t().ml="(((HUMAN:0.00432,CHIMP:0.00789):0.01243,(BABOON:0.00321,RHMONKEY:0.00219):0.02814):0.09531,((MOUSE:0.09127,RAT:0.08316):0.27392,(COW:0.19151,PIG:0.17324,HORSE:0.18962):0.06317):0.03215,CAT:0.22376)",!0),s(A,!1),S()(n())}function Be(){s(E,!e(E)),s(B,[]),U=""}function Ce(a){s(B,a.detail.selectedBranches),U=a.detail.taggedNewick,S()&&U&&S()(n(),U)}function Ne(a){if(s(x,a.detail.parsed_tags||[]),e(x).length>0){const r=e(x).map(v=>({id:v,name:`Tag: ${v}`})),o=F.map(v=>v.id);r.filter(v=>!o.includes(v.id)).length>0&&(s(y,e(x)[0]),e(E)||s(E,!0))}if(S()&&e(x).length>0){const r=n();S()(r,null,e(x))}}function Ie(a){s(y,a.target.value),s(B,[]),U=""}O(()=>(w(t()),w(n())),()=>{s(Y,t()[n()]||"")}),O(()=>w(n()),()=>{s(ie,q.find(a=>a.id===n())||q[0])}),O(()=>w(n()),()=>{s(z,n()==="custom")}),O(()=>(w(n()),w(t())),()=>{s(A,n()==="ml"&&!t().ml)}),O(()=>(e(y),e(x)),()=>{s(ye,F.find(a=>a.id===e(y))||(e(x).includes(e(y))?{id:e(y),name:`Tag: ${e(y)}`}:F[0]))}),O(()=>(e(Y),e(A),w(t())),()=>{s(le,e(Y)&&!(e(A)&&!t().ml))}),O(()=>e(x),()=>{s(Z,[...F,...e(x).map(a=>({id:a,name:`Tag: ${a}`})).filter(a=>!F.some(r=>r.id===a.id))])}),O(()=>(w(n()),e(u),w(h()),w(t())),()=>{n()==="custom"&&!e(u)&&(h()?(s(u,h()),t().custom||t(t().custom=h(),!0)):t().usertree&&(s(u,t().usertree),t().custom||t(t().custom=t().usertree,!0)))}),Ve(),Le();var oe=rt(),de=l(oe),$=d(l(de),2);k(()=>{n(),ge(()=>{t()})});var ce=l($);Q(ce,1,()=>q,X,(a,r)=>{var o=fe(),T=pe(o);{var v=f=>{var m=Ye(),g={},G=l(m);k(()=>{g!==(g=e(r).id)&&(m.value=(m.__value=e(r).id)==null?"":e(r).id),P(G,e(r).name)}),c(f,m)};M(T,f=>{(t()[e(r).id]||!e(r).needsInput&&!e(r).needsGeneration)&&f(v)})}c(a,o)});var Ae=d(ce);Q(Ae,1,()=>q,X,(a,r)=>{var o=fe(),T=pe(o);{var v=f=>{var m=De(),g={},G=l(m);k(()=>{g!==(g=e(r).id)&&(m.value=(m.__value=e(r).id)==null?"":e(r).id),P(G,e(r).name)}),c(f,m)};M(T,f=>{!t()[e(r).id]&&(e(r).needsInput||e(r).needsGeneration)&&f(v)})}c(a,o)});var ue=d(de,2);{var Ee=a=>{var r=Ke(),o=d(l(r),2);{var T=i=>{var b=Je(),ae=d(l(b),2),N=l(ae);k(I=>P(N,`${I??""}${(t().custom.length>50?"...":"")??""}`),[()=>t().custom.substring(0,50)],be),c(i,b)};M(o,i=>{t().custom&&i(T)})}var v=d(o,2),f=d(l(v),2);Fe(f,i=>s(ne,i),()=>e(ne));var m=d(v,2),g=l(m),G=l(g);{var ee=i=>{var b=K("Edit Newick String:");c(i,b)},te=i=>{var b=K("Paste Newick String:");c(i,b)};M(G,i=>{t().custom?i(ee):i(te,!1)})}var C=d(g,2),V=d(m,2),H=l(V);{var re=i=>{var b=K("Update Custom Tree");c(i,b)},D=i=>{var b=K("Submit Custom Tree");c(i,b)};M(H,i=>{t().custom?i(re):i(D,!1)})}k(i=>V.disabled=i,[()=>!e(u).trim()],be),j("change",f,Me),je(C,()=>e(u),i=>s(u,i)),j("click",V,we),c(a,r)};M(ue,a=>{e(z)&&a(Ee)})}var ve=d(ue,2);{var Oe=a=>{var r=Qe(),o=d(l(r),4);j("click",o,Se),c(a,r)};M(ve,a=>{e(A)&&a(Oe)})}var Ge=d(ve,2);{var Pe=a=>{var r=tt(),o=l(r),T=d(l(o)),v=l(T),f=d(o,2),m=l(f),g=d(f,2);{var G=C=>{var V=et(),H=d(l(V),2);k(()=>{e(y),ge(()=>{e(Z)})}),Q(H,5,()=>e(Z),X,(N,I)=>{var L=Xe(),J={},se=l(L);k(()=>{J!==(J=e(I).id)&&(L.value=(L.__value=e(I).id)==null?"":e(I).id),P(se,e(I).name)}),c(N,L)});var re=d(H,2),D=l(re),i=l(D),b=d(D,2);{var ae=N=>{var I=$e(),L=l(I);Q(L,5,()=>e(B),X,(J,se)=>{var me=Ze(),Re=l(me);k(()=>P(Re,e(se))),c(J,me)}),c(N,I)};M(b,N=>{e(B).length>0&&N(ae)})}k(()=>P(i,`Selected branches: ${e(B).length??""}`)),_e(H,()=>e(y),N=>s(y,N)),j("change",H,Ie),c(C,V)};M(g,C=>{e(E)&&C(G)})}var ee=d(g,4),te=l(ee);We(te,{get newickString(){return e(Y)},height:400,width:700,viewerType:Te,get branchTestMode(){return e(E)},get selectedBranches(){return e(B)},set selectedBranches(C){s(B,C)},$$events:{branchselection:Ce,parsedtags:Ne},$$legacy:!0}),k(()=>P(v,e(ie).name)),qe(m,()=>e(E),C=>s(E,C)),j("change",m,Be),c(a,r)};M(Ge,a=>{e(le)&&a(Pe)})}_e($,n),j("change",$,ke),c(he,oe),He()}at.__docgen={version:3,name:"TreeSelector.svelte",data:[{name:"trees",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{}"},static:!1,readonly:!1,defaultValue:"{}"},{name:"selectedTree",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:'"nj"'},{name:"onChange",visibility:"public",keywords:[{name:"required",description:""}],kind:"let",type:{kind:"type",type:"any",text:"any"},static:!1,readonly:!1},{name:"initialBranchTestMode",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1,defaultValue:"false"},{name:"userTree",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:'""'}],computed:[],methods:[],components:[],description:null,keywords:[],events:[],slots:[],refs:[]};export{at as T};
