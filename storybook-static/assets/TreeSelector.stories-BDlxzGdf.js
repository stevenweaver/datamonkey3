import{T as E}from"./TreeSelector-43ZCUCrB.js";/* empty css            */import"./template-CIKGjA4E.js";import"./runtime-CsLX-Eqq.js";import"./if-BJwBTplU.js";import"./store-CEga9lFI.js";import"./index-BJUjmB_L.js";import"./each--pBB4YgF.js";import"./class-BhzPnwhT.js";import"./input-e_bUZ-Vg.js";import"./props-ucnq1n3h.js";import"./select-BSQ0X8Fl.js";import"./this-BvMMnuCv.js";import"./index-client-C32oe8zx.js";import"./phylotree-CJOXszaR.js";import"./GardVisualization-BErLMUnZ.js";import"./html-ynStkv79.js";import"./attributes-DOIZIB14.js";const q={title:"TreeSelector",component:E,argTypes:{onChange:{action:"treeChanged"}}},c=e=>({Component:E,props:e}),o=c.bind({});o.args={trees:{nj:"(((((HUMAN:0.0007094811175330963,CHIMP:0.001097999950788399):0.01636505170584718,(BABOON:0.002228135311756104,RHMONKEY:0.003208158699156509):0.02669224056226239):0.1104329651335271,(MOUSE:0.1083853380447001,RAT:0.08033684101813202):0.269861493006827):0.02554526101244153,CAT:0.2324473165131622):0.009523377372626096,(COW:0.2190208699215655,PIG:0.1954998868609751):0.07189141490205825,HORSE:0.1953515445825866)",usertree:"((((PIG:0.147969,COW:0.213430):0.085099,HORSE:0.165787,CAT:0.264806):0.058611,((RHMONKEY{PR}:0.002015,BABOON{PR}:0.003108){PR}:0.022733,(HUMAN{PR}:0.004349,CHIMP{PR}:0.000799){PR}:0.011873){PR}:0.101856){PR}:0.340802,RAT:0.050958,MOUSE:0.097950)",ml:"(((HUMAN:0.00432,CHIMP:0.00789):0.01243,(BABOON:0.00321,RHMONKEY:0.00219):0.02814):0.09531,((MOUSE:0.09127,RAT:0.08316):0.27392,(COW:0.19151,PIG:0.17324,HORSE:0.18962):0.06317):0.03215,CAT:0.22376)"},selectedTree:"nj",onChange:(e,r)=>{console.log(r?`Tree selected: ${e} with tagged branches: ${r}`:`Tree selected: ${e}`)}};const s=c.bind({});s.args={trees:{nj:"(((((HUMAN:0.0007094811175330963,CHIMP:0.001097999950788399):0.01636505170584718,(BABOON:0.002228135311756104,RHMONKEY:0.003208158699156509):0.02669224056226239):0.1104329651335271,(MOUSE:0.1083853380447001,RAT:0.08033684101813202):0.269861493006827):0.02554526101244153,CAT:0.2324473165131622):0.009523377372626096,(COW:0.2190208699215655,PIG:0.1954998868609751):0.07189141490205825,HORSE:0.1953515445825866)"},selectedTree:"nj",onChange:(e,r)=>{console.log(r?`Tree selected: ${e} with tagged branches: ${r}`:`Tree selected: ${e}`)}};const t=c.bind({});t.args={trees:{nj:"(((((HUMAN:0.0007094811175330963,CHIMP:0.001097999950788399):0.01636505170584718,(BABOON:0.002228135311756104,RHMONKEY:0.003208158699156509):0.02669224056226239):0.1104329651335271,(MOUSE:0.1083853380447001,RAT:0.08033684101813202):0.269861493006827):0.02554526101244153,CAT:0.2324473165131622):0.009523377372626096,(COW:0.2190208699215655,PIG:0.1954998868609751):0.07189141490205825,HORSE:0.1953515445825866)",usertree:"((((PIG:0.147969,COW:0.213430):0.085099,HORSE:0.165787,CAT:0.264806):0.058611,((RHMONKEY{PR}:0.002015,BABOON{PR}:0.003108){PR}:0.022733,(HUMAN{PR}:0.004349,CHIMP{PR}:0.000799){PR}:0.011873){PR}:0.101856){PR}:0.340802,RAT:0.050958,MOUSE:0.097950)",ml:"(((HUMAN:0.00432,CHIMP:0.00789):0.01243,(BABOON:0.00321,RHMONKEY:0.00219):0.02814):0.09531,((MOUSE:0.09127,RAT:0.08316):0.27392,(COW:0.19151,PIG:0.17324,HORSE:0.18962):0.06317):0.03215,CAT:0.22376)",parsimony:"((HUMAN,CHIMP),(BABOON,RHMONKEY),((MOUSE,RAT),((COW,PIG),HORSE),CAT))",custom:"((HUMAN:0.001,CHIMP:0.001):0.01,[BABOON:0.002,RHMONKEY:0.003]:0.02,MOUSE:0.05,RAT:0.04,(COW:0.02,PIG:0.01,HORSE:0.015):0.03,CAT:0.02)"},selectedTree:"ml",onChange:(e,r)=>{console.log(r?`Tree selected: ${e} with tagged branches: ${r}`:`Tree selected: ${e}`)}};const n=c.bind({});n.args={trees:{nj:"(((((HUMAN:0.0007094811175330963,CHIMP:0.001097999950788399):0.01636505170584718,(BABOON:0.002228135311756104,RHMONKEY:0.003208158699156509):0.02669224056226239):0.1104329651335271,(MOUSE:0.1083853380447001,RAT:0.08033684101813202):0.269861493006827):0.02554526101244153,CAT:0.2324473165131622):0.009523377372626096,(COW:0.2190208699215655,PIG:0.1954998868609751):0.07189141490205825,HORSE:0.1953515445825866)"},selectedTree:"nj",onChange:(e,r)=>{console.log(r?`Tree selected: ${e} with tagged branches: ${r}`:`Tree selected: ${e}`)}};const a=c.bind({});a.args={trees:{nj:"(((((HUMAN:0.0007094811175330963,CHIMP:0.001097999950788399):0.01636505170584718,(BABOON:0.002228135311756104,RHMONKEY:0.003208158699156509):0.02669224056226239):0.1104329651335271,(MOUSE:0.1083853380447001,RAT:0.08033684101813202):0.269861493006827):0.02554526101244153,CAT:0.2324473165131622):0.009523377372626096,(COW:0.2190208699215655,PIG:0.1954998868609751):0.07189141490205825,HORSE:0.1953515445825866)"},selectedTree:"nj",initialBranchTestMode:!0,onChange:(e,r)=>{console.log(r?`Tree selected: ${e} with tagged branches: ${r}`:`Tree selected: ${e}`)}};var O,l,p;o.parameters={...o.parameters,docs:{...(O=o.parameters)==null?void 0:O.docs,source:{originalSource:`args => ({
  Component: TreeSelector,
  props: args
})`,...(p=(l=o.parameters)==null?void 0:l.docs)==null?void 0:p.source}}};var i,T,m;s.parameters={...s.parameters,docs:{...(i=s.parameters)==null?void 0:i.docs,source:{originalSource:`args => ({
  Component: TreeSelector,
  props: args
})`,...(m=(T=s.parameters)==null?void 0:T.docs)==null?void 0:m.source}}};var R,M,C;t.parameters={...t.parameters,docs:{...(R=t.parameters)==null?void 0:R.docs,source:{originalSource:`args => ({
  Component: TreeSelector,
  props: args
})`,...(C=(M=t.parameters)==null?void 0:M.docs)==null?void 0:C.source}}};var g,A,H;n.parameters={...n.parameters,docs:{...(g=n.parameters)==null?void 0:g.docs,source:{originalSource:`args => ({
  Component: TreeSelector,
  props: args
})`,...(H=(A=n.parameters)==null?void 0:A.docs)==null?void 0:H.source}}};var P,d,S;a.parameters={...a.parameters,docs:{...(P=a.parameters)==null?void 0:P.docs,source:{originalSource:`args => ({
  Component: TreeSelector,
  props: args
})`,...(S=(d=a.parameters)==null?void 0:d.docs)==null?void 0:S.source}}};const v=["Default","SingleTree","ManyTrees","WithBranchTesting","WithBranchTestingInitiallyEnabled"];export{o as Default,t as ManyTrees,s as SingleTree,n as WithBranchTesting,a as WithBranchTestingInitiallyEnabled,v as __namedExportsOrder,q as default};
